
<div class="body-content">
    <div class=" form-group row">
        <div class="col-md-4">
            <input type="image" id="car" style="vertical-align: middle;" src="~/Content/Images/google-car.png" value="DRIVING" width="30" height="30" onclick="calcRoute(drivingMode());">
            <input type="image" id="person" style="vertical-align: middle;" src="~/Content/Images/google-person.png" value="WALKING" width="30" height="30" onclick="calcRoute(walkingMode());">
            <input type="image" id="bike" style="vertical-align: middle;" src="~/Content/Images/google-bike.png" value="BICYCLING" width="30" height="30" onclick="calcRoute(bicyclingMode());">
        </div>
    </div>
    <div class="form-horizontal">
        <div class="row">
            <div class="form-group col-sm-5">
                <label for="start" class="col-sm-2 control-label">Start: </label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="start">
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-sm-5">
                <label for="end" class="col-sm-2 control-label">End: </label>
                <div class="col-sm-10">
                    <input type="text" class="form-control" id="end">
                </div>
            </div>
        </div>
        <div class="row">
            <div class=" form-group row">
                <label for="when-picker" class="col-md-1 control-label">When: </label>
                <div class="col-md-4">
                    <input type="text" id="when-picker" class="form-control" />
                </div>
            </div>
        </div>
        <div class="col-sm-2">
            <button type="submit" class="btn btn-default col-sm-6" onclick="calcRoute(drivingMode());">Submit</button>
            <div class="col-sm-6" id="loading" style="display:none;"><img src="~/Content/Images/loader.gif" /></div>
        </div>
            <div class=" form-group row">
                <label for="waypoint" class="col-md-1 control-label">Add destinations: </label>
                <div class="col-md-4">
                    <input type="text" class="form-control" id="waypoint" style="display: inline;">
                    <input type="image" style="vertical-align: middle;" src="~/add_icon.png" name="add_image" width="30" height="30" onclick="addToList();">
                    <input type="image" id="list" style="vertical-align: middle;" src="~/list_icon.png" name="list_image" width="30" height="30">
                </div>
            </div>
        </div>
    <div id="productView"></div>
</div>
<div id="map-canvas"></div>
<div id="warnings_panel" style="width:100%;height:10%;text-align:center"></div>

@section Scripts {
    <script src="http://maps.googleapis.com/maps/api/js?v=3.exp&libraries=places&sensor=false"></script>
    <script src="~/Scripts/jBox.min.js"></script>
    <link href="http://code.jboxcdn.com/0.3.2/jBox.css" rel="stylesheet">

    <script>
        $("#start").geocomplete();
        $("#end").geocomplete();
        $("#waypoint").geocomplete();
        $("#when-picker").datetimepicker({
            step: 60,
            minDate: 0,
            maxDate: '+1970/01/15',
            roundTime: 'ceil'

        });
    </script>
    <script>
        var map;
        var directionsDisplay;
        var directionsService;
        var stepDisplay;
        var markerArray = [];
        var mapcenter;
        var waypts = [];

        var destinations = $('#list').jBox('Tooltip', {
            width: 300,
            height: 200,
            trigger: 'click',
            title: 'Your destinations'
        });

        var check_message = $('#waypoint').jBox('Tooltip', {
            width: 280,
            height: 50,
            closeOnClick: true,
            trigger: 'click',
            content: '<div style="color:red"><b>Destination must be filled out!</b></div>'
        });
        check_message.disable();

        function initialize() {
            // Instantiate a directions service.

            directionsService = new google.maps.DirectionsService();

            var mapOptions = {
                zoom: 13
            };

            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);

            if (navigator.geolocation) {
                //create a map according user geolocation
                navigator.geolocation.getCurrentPosition(function (position) {
                    mapcenter = new google.maps.LatLng(position.coords.latitude,
                                                     position.coords.longitude);

                    var icon = 'http://maps.google.com/mapfiles/kml/pal3/icon28.png';
                    var geomarker = new google.maps.Marker({
                        position: mapcenter,
                        map: map,
                        icon: icon
                    });

                    markerArray.push(geomarker);
                    map.setCenter(mapcenter);
                }, function () {
                    handleNoGeolocation(true);
                });
            } else {

                handleNoGeolocation(false);
            }

            // Create a renderer for directions and bind it to the map.
            var rendererOptions = {
                map: map
            }
            directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions)

            // Instantiate an info window to hold step text.
            stepDisplay = new google.maps.InfoWindow();
        }

        function handleNoGeolocation(errorFlag) {
            // Create a map and center it on Brno.
            var options = {
                map: map,
                position: new google.maps.LatLng(49.19522, 16.60796),
            };

            var infowindow = new google.maps.InfoWindow(options);
            map.setCenter(options.position);
        }


        function addToList() {
            var placeName = document.getElementById("waypoint").value;
            if (placeName == "" || placeName == null) {
                check_message.enable();
                check_message.open();
            } else {
                check_message.close();
                var str = "<ol>";
                waypts.push({ location: placeName, stopover: true });
                document.getElementById("waypoint").value = "";
                for (var i = 0; i < waypts.length; i++) {
                    str += '<li>' + waypts[i].location + '</li>';
                }
                str += "</ol>"
                destinations.setContent(str);
                check_message.disable();

                var notice = new jBox('Notice', {
                    content: '<b>' + placeName + '</b>' + ' added to destinations!',
                    autoClose: '4000',
                    color: 'green'
                });
            }
        }

        function drivingMode() {
            document.getElementById('car').src = "../Content/Images/google-car-selected.png";
            document.getElementById('bike').src = "../Content/Images/google-bike.png";
            document.getElementById('person').src = "../Content/Images/google-person.png";
            return document.getElementById('car').value
        }

        function walkingMode() {
            document.getElementById('car').src = "../Content/Images/google-car.png";
            document.getElementById('bike').src = "../Content/Images/google-bike.png";
            document.getElementById('person').src = "../Content/Images/google-person-selected.png";
            return document.getElementById('person').value
        }

        function bicyclingMode() {
            document.getElementById('car').src = "../Content/Images/google-car.png";
            document.getElementById('bike').src = "../Content/Images/google-bike-selected.png";
            document.getElementById('person').src = "../Content/Images/google-person.png";
            return document.getElementById('bike').value
        }

        function calcRoute(selectedMode) {

            // First, remove any existing markers from the map.
            for (var i = 0; i < markerArray.length; i++) {
                markerArray[i].setMap(null);
            }

            // Now, clear the array itself.
            markerArray = [];

            // Retrieve the start and end locations and create
            // a DirectionsRequest using WALKING directions.
            var start = document.getElementById('start').value;
            var end = document.getElementById('end').value;

            //var waypts = [];
            //var checkboxArray = document.getElementById('waypoints');

            var request = {
                origin: start,
                destination: end,
                waypoints: waypts,
                optimizeWaypoints: true,
                travelMode: google.maps.TravelMode[selectedMode]
            };

            // Route the directions and pass the response to a
            // function to create markers for each step.
            directionsService.route(request, function (response, status) {
                if (status == google.maps.DirectionsStatus.OK) {
                    var warnings = document.getElementById('warnings_panel');
                    warnings.innerHTML = '<b>' + response.routes[0].warnings + '</b>';
                    directionsDisplay.setDirections(response);
                    showWeatherMarkers(response);
                }
            });
        }

        function parseDirectionResult(directionResult) {
            var myRoute = directionResult.routes[0].overview_path;

            var locations = new Array();
            for (var i = 0; i < myRoute.length; i++) {
                locations.push(
                    {
                        'Longitude': myRoute[i].lng(),
                        'Latitude': myRoute[i].lat(),
                    }
                );
            }
            return locations;
        }

        function showWeatherMarkers(directionResult) {
            var locations = parseDirectionResult(directionResult);
            var dateTime = $("#when-picker").datetimepicker('getDate');
            var route = directionResult.routes[0];
            var duration = 0;

            $.each(route.legs, function (index, value) {
                duration += route.legs[index].duration.value;
            });
            var message = {
                "locations": locations,
                "startDateTime": dateTime.val(),
                "duration": duration
            };
            var jsonSerialized = JSON.stringify(message);

            $.ajax({
                type: "POST",
                url: "/api/weather",
                dataType: "json",
                contentType: "application/json; charset=utf-8",
                data: jsonSerialized,
                success: function (result) {
                    $.each(result, function (index, mark) {
                        var image = {
                            url: mark.Image.Url,
                            size: new google.maps.Size(50, 50),
                            origin: new google.maps.Point(0, 0),
                            anchor: new google.maps.Point(0, 50)
                        };

                        var marker = new google.maps.Marker({
                            position: new google.maps.LatLng(mark.Location.Latitude, mark.Location.Longitude),
                            icon: image,
                        });
                        google.maps.event.addListener(marker, 'click', function () {
                            stepDisplay.setContent(mark.Title);
                            stepDisplay.open(map, marker);
                        });
                        markerArray.push(marker);
                        marker.setMap(map);
                    });
                },
                error: function (error) {
                    alert("There was an error posting the data to the server: " + error.responseText);
                }
            });
        }

        google.maps.event.addDomListener(window, 'load', initialize);

        var loading = $("#loading");
        $(document).ajaxStart(function () {
            loading.show();
        });

        $(document).ajaxStop(function () {
            loading.hide();
        });

    </script>
}
